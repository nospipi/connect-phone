// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output = "../generated/client"
  binaryTargets = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  
}

//---------------------------------------------------------------------------------

model Organization {
  id            Int              @id @default(autoincrement())
  createdAt     DateTime         @default(now())
  name          String
  users         UserInOrganization[]
  loggedInUsers User[]           @relation("LoggedInOrganization")
}

enum Role {
  ADMIN
  MODERATOR
  VIEWER
  CLIENT
}

model User {
  id                   Int              @id @default(autoincrement())
  createdAt            DateTime         @default(now())
  email                String           @unique
  name                 String?
  organizations        UserInOrganization[]
  loggedToOrganization Organization?    @relation("LoggedInOrganization", fields: [loggedToOrganizationId], references: [id])
  loggedToOrganizationId Int?
}

// Junction table to handle many-to-many relationship with role information
model UserInOrganization {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id])
  userId         Int
  organization   Organization @relation(fields: [organizationId], references: [id])
  organizationId Int
  role           Role         // User's role specific to this organization

  @@unique([userId, organizationId])
}